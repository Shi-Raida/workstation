name: Release

on:
  workflow_call:
    inputs:
      security-result:
        required: true
        type: string
        description: "Result of security workflow"
      code-lint-result:
        required: true
        type: string
        description: "Result of code lint workflow"
      commit-lint-result:
        required: true
        type: string
        description: "Result of commit lint workflow"
    outputs:
      result:
        description: "Result of release workflow"
        value: ${{ jobs.release.outputs.result }}
      version:
        description: "Version released (if any)"
        value: ${{ jobs.release.outputs.version }}

permissions:
  contents: write
  issues: write
  pull-requests: write
  id-token: write

jobs:
  release:
    name: Semantic Release
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    outputs:
      result: ${{ steps.release.outcome }}
      version: ${{ steps.release.outputs.new_release_version }}

    steps:
      - name: Validate prerequisites
        run: |
          echo "🔍 Validating release prerequisites..."
          echo "Security result: ${{ inputs.security-result }}"
          echo "Code lint result: ${{ inputs.code-lint-result }}"
          echo "Commit lint result: ${{ inputs.commit-lint-result }}"

          # Check if all required workflows passed
          if [ "${{ inputs.security-result }}" != "success" ]; then
            echo "❌ Security workflow must pass before release"
            exit 1
          fi

          if [ "${{ inputs.code-lint-result }}" != "success" ]; then
            echo "❌ Code lint workflow must pass before release"
            exit 1
          fi

          if [ "${{ inputs.commit-lint-result }}" != "success" ] && [ "${{ inputs.commit-lint-result }}" != "skipped" ]; then
            echo "❌ Commit lint workflow must pass before release"
            exit 1
          fi

          echo "✅ All prerequisites met for release"

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
          cache: 'npm'

      - name: Cache Node.js dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: node-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            node-${{ runner.os }}-

      - name: Install semantic-release dependencies
        run: |
          echo "📦 Installing semantic-release dependencies..."
          npm install --save-dev \
            conventional-changelog-conventionalcommits \
            semantic-release \
            @semantic-release/changelog \
            @semantic-release/exec \
            @semantic-release/git \
            @semantic-release/github

      - name: Run semantic-release
        id: release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "🚀 Running semantic release..."
          npx semantic-release
        continue-on-error: false

      - name: Generate release summary
        if: always()
        run: |
          echo "# 🚀 Release Workflow" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Release Date:** $(date -u '+%Y-%m-%d %H:%M:%S UTC')" >> $GITHUB_STEP_SUMMARY
          echo "**Branch:** ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
          echo "**Commit:** ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          if [ "${{ steps.release.outcome }}" == "success" ]; then
            if [ -n "${{ steps.release.outputs.new_release_version }}" ]; then
              echo "## ✅ Release Published" >> $GITHUB_STEP_SUMMARY
              echo "**New Version:** v${{ steps.release.outputs.new_release_version }}" >> $GITHUB_STEP_SUMMARY
              echo "" >> $GITHUB_STEP_SUMMARY
              echo "### Changes Released:" >> $GITHUB_STEP_SUMMARY
              echo "- Changelog updated automatically" >> $GITHUB_STEP_SUMMARY
              echo "- Git tag created" >> $GITHUB_STEP_SUMMARY
              echo "- GitHub release published" >> $GITHUB_STEP_SUMMARY
            else
              echo "## ⏭️ No Release Needed" >> $GITHUB_STEP_SUMMARY
              echo "No new commits warrant a release" >> $GITHUB_STEP_SUMMARY
            fi
          else
            echo "## ❌ Release Failed" >> $GITHUB_STEP_SUMMARY
            echo "Semantic release encountered an error - check job logs" >> $GITHUB_STEP_SUMMARY
          fi

          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Prerequisites Status:" >> $GITHUB_STEP_SUMMARY
          echo "- **Security Scan:** ${{ inputs.security-result }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Code Linting:** ${{ inputs.code-lint-result }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Commit Linting:** ${{ inputs.commit-lint-result }}" >> $GITHUB_STEP_SUMMARY

  # Placeholder job for non-main branch or non-push events
  release-skip:
    name: Release (Skipped)
    runs-on: ubuntu-latest
    if: github.ref != 'refs/heads/main' || github.event_name != 'push'
    outputs:
      result: skipped
      version: ""

    steps:
      - name: Skip release for non-main branch
        run: |
          echo "⏭️ Release only runs on main branch pushes"
          echo "Current branch: ${{ github.ref_name }}"
          echo "Current event: ${{ github.event_name }}"

          echo "# 🚀 Release Workflow" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## ⏭️ Skipped" >> $GITHUB_STEP_SUMMARY
          echo "Release only runs on pushes to the main branch" >> $GITHUB_STEP_SUMMARY
          echo "**Current branch:** ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
          echo "**Current event:** ${{ github.event_name }}" >> $GITHUB_STEP_SUMMARY
