name: Release

on:
  workflow_call:
    inputs:
      security-result:
        required: true
        type: string
        description: "Result of security workflow"
      code-lint-result:
        required: true
        type: string
        description: "Result of code lint workflow"
      commit-lint-result:
        required: true
        type: string
        description: "Result of commit lint workflow"
    outputs:
      result:
        description: "Result of release workflow"
        value: ${{ jobs.release.outputs.result }}
      version:
        description: "Version released (if any)"
        value: ${{ jobs.release.outputs.version }}

permissions:
  contents: write
  issues: write
  pull-requests: write
  id-token: write

jobs:
  release:
    name: Semantic Release
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    outputs:
      result: ${{ steps.release.outcome }}
      version: ${{ steps.release.outputs.new_release_version }}

    steps:
      - name: Validate prerequisites
        run: |
          echo "üîç Validating release prerequisites..."
          echo "Security result: ${{ inputs.security-result }}"
          echo "Code lint result: ${{ inputs.code-lint-result }}"
          echo "Commit lint result: ${{ inputs.commit-lint-result }}"

          # Check if all required workflows passed
          if [ "${{ inputs.security-result }}" != "success" ]; then
            echo "‚ùå Security workflow must pass before release"
            exit 1
          fi

          if [ "${{ inputs.code-lint-result }}" != "success" ]; then
            echo "‚ùå Code lint workflow must pass before release"
            exit 1
          fi

          if [ "${{ inputs.commit-lint-result }}" != "success" ] && [ "${{ inputs.commit-lint-result }}" != "skipped" ]; then
            echo "‚ùå Commit lint workflow must pass before release"
            exit 1
          fi

          echo "‚úÖ All prerequisites met for release"

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
          cache: 'npm'

      - name: Cache Node.js dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: node-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            node-${{ runner.os }}-

      - name: Install semantic-release dependencies
        run: |
          echo "üì¶ Installing semantic-release dependencies..."
          npm install --save-dev \
            conventional-changelog-conventionalcommits \
            semantic-release \
            @semantic-release/changelog \
            @semantic-release/exec \
            @semantic-release/git \
            @semantic-release/github

      - name: Run semantic-release
        id: release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "üöÄ Running semantic release..."
          npx semantic-release
        continue-on-error: false


  # Placeholder job for non-main branch or non-push events
  release-skip:
    name: Release (Skipped)
    runs-on: ubuntu-latest
    if: github.ref != 'refs/heads/main' || github.event_name != 'push'
    outputs:
      result: skipped
      version: ""

    steps:
      - name: Skip release for non-main branch
        run: |
          echo "‚è≠Ô∏è Release only runs on main branch pushes"
          echo "Current branch: ${{ github.ref_name }}"
          echo "Current event: ${{ github.event_name }}"
