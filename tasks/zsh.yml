---
- name: Install zsh package
  ansible.builtin.apt:
    name: zsh
  become: true

- name: Check if oh-my-zsh folder exists
  ansible.builtin.stat:
    path: "{{ oh_my_zsh_dir }}/"
  register: oh_my_zsh_rules

- name: Install oh-my-zsh
  ansible.builtin.shell: sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
  changed_when: false
  when: not oh_my_zsh_rules.stat.exists

- name: Install oh-my-zsh plugins
  ansible.builtin.git:
    repo: "{{ item.repo }}"
    dest: "{{ oh_my_zsh_plugings_dir }}/{{ item.name }}"
    version: "{{ item.version | default('HEAD') }}"
  loop_control:
    label: "{{ item.name }}"
  with_items: "{{ oh_my_zsh_plugings }}"

- name: Download Starship installer
  ansible.builtin.get_url:
    url: https://starship.rs/install.sh
    dest: /tmp/starship-installer.sh
    mode: '0755'

- name: Install Starship
  ansible.builtin.shell: /tmp/starship-installer.sh -y
  args:
    creates: /usr/local/bin/starship

- name: Copy zsh config
  ansible.builtin.copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    mode: preserve
  loop_control:
    label: "{{ item.src }}"
  with_items:
    - { src: "zsh/zshrc", dest: "{{ ansible_user_dir }}/.zshrc" }
    - { src: "zsh/completions", dest: "{{ ansible_user_dir }}/.oh-my-zsh/" }
    - { src: "starship", dest: "{{ xdg_config_home }}/" }

- name: Set zsh as default shell
  ansible.builtin.command: usermod --shell /bin/zsh {{ ansible_user_id }}
  become: true
  changed_when: false
